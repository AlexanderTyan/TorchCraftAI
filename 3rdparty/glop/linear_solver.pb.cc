// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/linear_solver/linear_solver.proto

#include "linear_solver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace operations_research {
class MPVariableProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPVariableProto>
      _instance;
} _MPVariableProto_default_instance_;
class MPConstraintProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPConstraintProto>
      _instance;
} _MPConstraintProto_default_instance_;
class PartialVariableAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PartialVariableAssignment>
      _instance;
} _PartialVariableAssignment_default_instance_;
class MPModelProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPModelProto>
      _instance;
} _MPModelProto_default_instance_;
class OptionalDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionalDouble>
      _instance;
} _OptionalDouble_default_instance_;
class MPSolverCommonParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPSolverCommonParameters>
      _instance;
} _MPSolverCommonParameters_default_instance_;
class MPModelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPModelRequest>
      _instance;
} _MPModelRequest_default_instance_;
class MPSolutionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MPSolutionResponse>
      _instance;
} _MPSolutionResponse_default_instance_;
}  // namespace operations_research
namespace protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto {
void InitDefaultsMPVariableProtoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::operations_research::_MPVariableProto_default_instance_;
    new (ptr) ::operations_research::MPVariableProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPVariableProto::InitAsDefaultInstance();
}

void InitDefaultsMPVariableProto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPVariableProtoImpl);
}

void InitDefaultsMPConstraintProtoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::operations_research::_MPConstraintProto_default_instance_;
    new (ptr) ::operations_research::MPConstraintProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPConstraintProto::InitAsDefaultInstance();
}

void InitDefaultsMPConstraintProto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPConstraintProtoImpl);
}

void InitDefaultsPartialVariableAssignmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::operations_research::_PartialVariableAssignment_default_instance_;
    new (ptr) ::operations_research::PartialVariableAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::PartialVariableAssignment::InitAsDefaultInstance();
}

void InitDefaultsPartialVariableAssignment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPartialVariableAssignmentImpl);
}

void InitDefaultsMPModelProtoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPVariableProto();
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPConstraintProto();
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsPartialVariableAssignment();
  {
    void* ptr = &::operations_research::_MPModelProto_default_instance_;
    new (ptr) ::operations_research::MPModelProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPModelProto::InitAsDefaultInstance();
}

void InitDefaultsMPModelProto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPModelProtoImpl);
}

void InitDefaultsOptionalDoubleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::operations_research::_OptionalDouble_default_instance_;
    new (ptr) ::operations_research::OptionalDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::OptionalDouble::InitAsDefaultInstance();
}

void InitDefaultsOptionalDouble() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptionalDoubleImpl);
}

void InitDefaultsMPSolverCommonParametersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsOptionalDouble();
  {
    void* ptr = &::operations_research::_MPSolverCommonParameters_default_instance_;
    new (ptr) ::operations_research::MPSolverCommonParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPSolverCommonParameters::InitAsDefaultInstance();
}

void InitDefaultsMPSolverCommonParameters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPSolverCommonParametersImpl);
}

void InitDefaultsMPModelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPModelProto();
  {
    void* ptr = &::operations_research::_MPModelRequest_default_instance_;
    new (ptr) ::operations_research::MPModelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPModelRequest::InitAsDefaultInstance();
}

void InitDefaultsMPModelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPModelRequestImpl);
}

void InitDefaultsMPSolutionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::operations_research::_MPSolutionResponse_default_instance_;
    new (ptr) ::operations_research::MPSolutionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::MPSolutionResponse::InitAsDefaultInstance();
}

void InitDefaultsMPSolutionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMPSolutionResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, objective_coefficient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, is_integer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPVariableProto, name_),
  3,
  4,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, var_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, coefficient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPConstraintProto, is_lazy_),
  ~0u,
  ~0u,
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::PartialVariableAssignment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::PartialVariableAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::PartialVariableAssignment, var_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::PartialVariableAssignment, var_value_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, maximize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, objective_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelProto, solution_hint_),
  3,
  2,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::OptionalDouble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::OptionalDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::OptionalDouble, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, relative_mip_gap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, primal_tolerance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, dual_tolerance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, lp_algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, presolve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolverCommonParameters, scaling_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, solver_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, solver_time_limit_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, enable_internal_solver_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPModelRequest, solver_specific_parameters_),
  1,
  4,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, objective_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, best_objective_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, variable_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, dual_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::operations_research::MPSolutionResponse, reduced_cost_),
  2,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::operations_research::MPVariableProto)},
  { 15, 26, sizeof(::operations_research::MPConstraintProto)},
  { 32, 39, sizeof(::operations_research::PartialVariableAssignment)},
  { 41, 52, sizeof(::operations_research::MPModelProto)},
  { 58, 64, sizeof(::operations_research::OptionalDouble)},
  { 65, 76, sizeof(::operations_research::MPSolverCommonParameters)},
  { 82, 92, sizeof(::operations_research::MPModelRequest)},
  { 97, 108, sizeof(::operations_research::MPSolutionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPVariableProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPConstraintProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_PartialVariableAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPModelProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_OptionalDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPSolverCommonParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPModelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::operations_research::_MPSolutionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ortools/linear_solver/linear_solver.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)ortools/linear_solver/linear_solver.pr"
      "oto\022\023operations_research\032#ortools/util/o"
      "ptional_boolean.proto\"\223\001\n\017MPVariableProt"
      "o\022\031\n\013lower_bound\030\001 \001(\001:\004-inf\022\030\n\013upper_bo"
      "und\030\002 \001(\001:\003inf\022 \n\025objective_coefficient\030"
      "\003 \001(\001:\0010\022\031\n\nis_integer\030\004 \001(\010:\005false\022\016\n\004n"
      "ame\030\005 \001(\t:\000\"\240\001\n\021MPConstraintProto\022\025\n\tvar"
      "_index\030\006 \003(\005B\002\020\001\022\027\n\013coefficient\030\007 \003(\001B\002\020"
      "\001\022\031\n\013lower_bound\030\002 \001(\001:\004-inf\022\030\n\013upper_bo"
      "und\030\003 \001(\001:\003inf\022\016\n\004name\030\004 \001(\t:\000\022\026\n\007is_laz"
      "y\030\005 \001(\010:\005false\"I\n\031PartialVariableAssignm"
      "ent\022\025\n\tvar_index\030\001 \003(\005B\002\020\001\022\025\n\tvar_value\030"
      "\002 \003(\001B\002\020\001\"\217\002\n\014MPModelProto\022\027\n\010maximize\030\001"
      " \001(\010:\005false\022\033\n\020objective_offset\030\002 \001(\001:\0010"
      "\0226\n\010variable\030\003 \003(\0132$.operations_research"
      ".MPVariableProto\022:\n\nconstraint\030\004 \003(\0132&.o"
      "perations_research.MPConstraintProto\022\016\n\004"
      "name\030\005 \001(\t:\000\022E\n\rsolution_hint\030\006 \001(\0132..op"
      "erations_research.PartialVariableAssignm"
      "ent\"\037\n\016OptionalDouble\022\r\n\005value\030\001 \001(\001\"\275\004\n"
      "\030MPSolverCommonParameters\022=\n\020relative_mi"
      "p_gap\030\001 \001(\0132#.operations_research.Option"
      "alDouble\022=\n\020primal_tolerance\030\002 \001(\0132#.ope"
      "rations_research.OptionalDouble\022;\n\016dual_"
      "tolerance\030\003 \001(\0132#.operations_research.Op"
      "tionalDouble\022j\n\014lp_algorithm\030\004 \001(\0162\?.ope"
      "rations_research.MPSolverCommonParameter"
      "s.LPAlgorithmValues:\023LP_ALGO_UNSPECIFIED"
      "\022H\n\010presolve\030\005 \001(\0162$.operations_research"
      ".OptionalBoolean:\020BOOL_UNSPECIFIED\022G\n\007sc"
      "aling\030\007 \001(\0162$.operations_research.Option"
      "alBoolean:\020BOOL_UNSPECIFIED\"g\n\021LPAlgorit"
      "hmValues\022\027\n\023LP_ALGO_UNSPECIFIED\020\000\022\020\n\014LP_"
      "ALGO_DUAL\020\001\022\022\n\016LP_ALGO_PRIMAL\020\002\022\023\n\017LP_AL"
      "GO_BARRIER\020\003\"\266\005\n\016MPModelRequest\0220\n\005model"
      "\030\001 \001(\0132!.operations_research.MPModelProt"
      "o\022C\n\013solver_type\030\002 \001(\0162..operations_rese"
      "arch.MPModelRequest.SolverType\022!\n\031solver"
      "_time_limit_seconds\030\003 \001(\001\022,\n\035enable_inte"
      "rnal_solver_output\030\004 \001(\010:\005false\022\"\n\032solve"
      "r_specific_parameters\030\005 \001(\t\"\267\003\n\nSolverTy"
      "pe\022\033\n\027GLOP_LINEAR_PROGRAMMING\020\002\022\032\n\026CLP_L"
      "INEAR_PROGRAMMING\020\000\022\033\n\027GLPK_LINEAR_PROGR"
      "AMMING\020\001\022\035\n\031GUROBI_LINEAR_PROGRAMMING\020\006\022"
      "\034\n\030CPLEX_LINEAR_PROGRAMMING\020\n\022\"\n\036SCIP_MI"
      "XED_INTEGER_PROGRAMMING\020\003\022\"\n\036GLPK_MIXED_"
      "INTEGER_PROGRAMMING\020\004\022!\n\035CBC_MIXED_INTEG"
      "ER_PROGRAMMING\020\005\022$\n GUROBI_MIXED_INTEGER"
      "_PROGRAMMING\020\007\022#\n\037CPLEX_MIXED_INTEGER_PR"
      "OGRAMMING\020\013\022\033\n\027BOP_INTEGER_PROGRAMMING\020\014"
      "\022\033\n\027SAT_INTEGER_PROGRAMMING\020\016\022&\n\"KNAPSAC"
      "K_MIXED_INTEGER_PROGRAMMING\020\r\"\357\001\n\022MPSolu"
      "tionResponse\022T\n\006status\030\001 \001(\0162+.operation"
      "s_research.MPSolverResponseStatus:\027MPSOL"
      "VER_UNKNOWN_STATUS\022\027\n\017objective_value\030\002 "
      "\001(\001\022\034\n\024best_objective_bound\030\005 \001(\001\022\032\n\016var"
      "iable_value\030\003 \003(\001B\002\020\001\022\026\n\ndual_value\030\004 \003("
      "\001B\002\020\001\022\030\n\014reduced_cost\030\006 \003(\001B\002\020\001*\372\002\n\026MPSo"
      "lverResponseStatus\022\024\n\020MPSOLVER_OPTIMAL\020\000"
      "\022\025\n\021MPSOLVER_FEASIBLE\020\001\022\027\n\023MPSOLVER_INFE"
      "ASIBLE\020\002\022\026\n\022MPSOLVER_UNBOUNDED\020\003\022\025\n\021MPSO"
      "LVER_ABNORMAL\020\004\022\027\n\023MPSOLVER_NOT_SOLVED\020\006"
      "\022\033\n\027MPSOLVER_MODEL_IS_VALID\020a\022\033\n\027MPSOLVE"
      "R_UNKNOWN_STATUS\020c\022\032\n\026MPSOLVER_MODEL_INV"
      "ALID\020\005\022(\n$MPSOLVER_MODEL_INVALID_SOLUTIO"
      "N_HINT\020T\022,\n(MPSOLVER_MODEL_INVALID_SOLVE"
      "R_PARAMETERS\020U\022$\n MPSOLVER_SOLVER_TYPE_U"
      "NAVAILABLE\020\007B#\n\037com.google.ortools.linea"
      "rsolverP\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2729);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ortools/linear_solver/linear_solver.proto", &protobuf_RegisterTypes);
  ::protobuf_ortools_2futil_2foptional_5fboolean_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto
namespace operations_research {
const ::google::protobuf::EnumDescriptor* MPSolverCommonParameters_LPAlgorithmValues_descriptor() {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_enum_descriptors[0];
}
bool MPSolverCommonParameters_LPAlgorithmValues_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LP_ALGO_UNSPECIFIED;
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LP_ALGO_DUAL;
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LP_ALGO_PRIMAL;
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LP_ALGO_BARRIER;
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LPAlgorithmValues_MIN;
const MPSolverCommonParameters_LPAlgorithmValues MPSolverCommonParameters::LPAlgorithmValues_MAX;
const int MPSolverCommonParameters::LPAlgorithmValues_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MPModelRequest_SolverType_descriptor() {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_enum_descriptors[1];
}
bool MPModelRequest_SolverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MPModelRequest_SolverType MPModelRequest::GLOP_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::CLP_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::GLPK_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::GUROBI_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::CPLEX_LINEAR_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::SCIP_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::GLPK_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::CBC_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::GUROBI_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::CPLEX_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::BOP_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::SAT_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::KNAPSACK_MIXED_INTEGER_PROGRAMMING;
const MPModelRequest_SolverType MPModelRequest::SolverType_MIN;
const MPModelRequest_SolverType MPModelRequest::SolverType_MAX;
const int MPModelRequest::SolverType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MPSolverResponseStatus_descriptor() {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_enum_descriptors[2];
}
bool MPSolverResponseStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 84:
    case 85:
    case 97:
    case 99:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MPVariableProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPVariableProto::kLowerBoundFieldNumber;
const int MPVariableProto::kUpperBoundFieldNumber;
const int MPVariableProto::kObjectiveCoefficientFieldNumber;
const int MPVariableProto::kIsIntegerFieldNumber;
const int MPVariableProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPVariableProto::MPVariableProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPVariableProto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPVariableProto)
}
MPVariableProto::MPVariableProto(const MPVariableProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&objective_coefficient_, &from.objective_coefficient_,
    static_cast<size_t>(reinterpret_cast<char*>(&upper_bound_) -
    reinterpret_cast<char*>(&objective_coefficient_)) + sizeof(upper_bound_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPVariableProto)
}

void MPVariableProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objective_coefficient_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_integer_) -
      reinterpret_cast<char*>(&objective_coefficient_)) + sizeof(is_integer_));
  lower_bound_ = -::google::protobuf::internal::Infinity();
  upper_bound_ = ::google::protobuf::internal::Infinity();
}

MPVariableProto::~MPVariableProto() {
  // @@protoc_insertion_point(destructor:operations_research.MPVariableProto)
  SharedDtor();
}

void MPVariableProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MPVariableProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPVariableProto::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPVariableProto& MPVariableProto::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPVariableProto();
  return *internal_default_instance();
}

MPVariableProto* MPVariableProto::New(::google::protobuf::Arena* arena) const {
  MPVariableProto* n = new MPVariableProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&objective_coefficient_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_integer_) -
        reinterpret_cast<char*>(&objective_coefficient_)) + sizeof(is_integer_));
    lower_bound_ = -::google::protobuf::internal::Infinity();
    upper_bound_ = ::google::protobuf::internal::Infinity();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPVariableProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double lower_bound = 1 [default = -inf];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_lower_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lower_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double upper_bound = 2 [default = inf];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_upper_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upper_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objective_coefficient = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_objective_coefficient();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objective_coefficient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_integer = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_integer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_integer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operations_research.MPVariableProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPVariableProto)
  return false;
#undef DO_
}

void MPVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lower_bound = 1 [default = -inf];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lower_bound(), output);
  }

  // optional double upper_bound = 2 [default = inf];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->upper_bound(), output);
  }

  // optional double objective_coefficient = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->objective_coefficient(), output);
  }

  // optional bool is_integer = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_integer(), output);
  }

  // optional string name = 5 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPVariableProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPVariableProto)
}

::google::protobuf::uint8* MPVariableProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lower_bound = 1 [default = -inf];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lower_bound(), target);
  }

  // optional double upper_bound = 2 [default = inf];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->upper_bound(), target);
  }

  // optional double objective_coefficient = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->objective_coefficient(), target);
  }

  // optional bool is_integer = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_integer(), target);
  }

  // optional string name = 5 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPVariableProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPVariableProto)
  return target;
}

size_t MPVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPVariableProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 5 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional double objective_coefficient = 3 [default = 0];
    if (has_objective_coefficient()) {
      total_size += 1 + 8;
    }

    // optional bool is_integer = 4 [default = false];
    if (has_is_integer()) {
      total_size += 1 + 1;
    }

    // optional double lower_bound = 1 [default = -inf];
    if (has_lower_bound()) {
      total_size += 1 + 8;
    }

    // optional double upper_bound = 2 [default = inf];
    if (has_upper_bound()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPVariableProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MPVariableProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPVariableProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPVariableProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPVariableProto)
    MergeFrom(*source);
  }
}

void MPVariableProto::MergeFrom(const MPVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      objective_coefficient_ = from.objective_coefficient_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_integer_ = from.is_integer_;
    }
    if (cached_has_bits & 0x00000008u) {
      lower_bound_ = from.lower_bound_;
    }
    if (cached_has_bits & 0x00000010u) {
      upper_bound_ = from.upper_bound_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPVariableProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPVariableProto::CopyFrom(const MPVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPVariableProto::IsInitialized() const {
  return true;
}

void MPVariableProto::Swap(MPVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPVariableProto::InternalSwap(MPVariableProto* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(objective_coefficient_, other->objective_coefficient_);
  swap(is_integer_, other->is_integer_);
  swap(lower_bound_, other->lower_bound_);
  swap(upper_bound_, other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPVariableProto::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MPConstraintProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPConstraintProto::kVarIndexFieldNumber;
const int MPConstraintProto::kCoefficientFieldNumber;
const int MPConstraintProto::kLowerBoundFieldNumber;
const int MPConstraintProto::kUpperBoundFieldNumber;
const int MPConstraintProto::kNameFieldNumber;
const int MPConstraintProto::kIsLazyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPConstraintProto::MPConstraintProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPConstraintProto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPConstraintProto)
}
MPConstraintProto::MPConstraintProto(const MPConstraintProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      var_index_(from.var_index_),
      coefficient_(from.coefficient_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&is_lazy_, &from.is_lazy_,
    static_cast<size_t>(reinterpret_cast<char*>(&upper_bound_) -
    reinterpret_cast<char*>(&is_lazy_)) + sizeof(upper_bound_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPConstraintProto)
}

void MPConstraintProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_lazy_ = false;
  lower_bound_ = -::google::protobuf::internal::Infinity();
  upper_bound_ = ::google::protobuf::internal::Infinity();
}

MPConstraintProto::~MPConstraintProto() {
  // @@protoc_insertion_point(destructor:operations_research.MPConstraintProto)
  SharedDtor();
}

void MPConstraintProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MPConstraintProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPConstraintProto::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPConstraintProto& MPConstraintProto::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPConstraintProto();
  return *internal_default_instance();
}

MPConstraintProto* MPConstraintProto::New(::google::protobuf::Arena* arena) const {
  MPConstraintProto* n = new MPConstraintProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPConstraintProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPConstraintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_index_.Clear();
  coefficient_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    is_lazy_ = false;
    lower_bound_ = -::google::protobuf::internal::Infinity();
    upper_bound_ = ::google::protobuf::internal::Infinity();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPConstraintProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPConstraintProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double lower_bound = 2 [default = -inf];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_lower_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lower_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double upper_bound = 3 [default = inf];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_upper_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upper_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 4 [default = ""];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operations_research.MPConstraintProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_lazy = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_lazy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_lazy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 var_index = 6 [packed = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_var_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_var_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double coefficient = 7 [packed = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_coefficient())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 58u, input, this->mutable_coefficient())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPConstraintProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPConstraintProto)
  return false;
#undef DO_
}

void MPConstraintProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPConstraintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lower_bound = 2 [default = -inf];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lower_bound(), output);
  }

  // optional double upper_bound = 3 [default = inf];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->upper_bound(), output);
  }

  // optional string name = 4 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPConstraintProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional bool is_lazy = 5 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_lazy(), output);
  }

  // repeated int32 var_index = 6 [packed = true];
  if (this->var_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _var_index_cached_byte_size_));
  }
  for (int i = 0, n = this->var_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->var_index(i), output);
  }

  // repeated double coefficient = 7 [packed = true];
  if (this->coefficient_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _coefficient_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->coefficient().data(), this->coefficient_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPConstraintProto)
}

::google::protobuf::uint8* MPConstraintProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPConstraintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double lower_bound = 2 [default = -inf];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lower_bound(), target);
  }

  // optional double upper_bound = 3 [default = inf];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->upper_bound(), target);
  }

  // optional string name = 4 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPConstraintProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional bool is_lazy = 5 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_lazy(), target);
  }

  // repeated int32 var_index = 6 [packed = true];
  if (this->var_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _var_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->var_index_, target);
  }

  // repeated double coefficient = 7 [packed = true];
  if (this->coefficient_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _coefficient_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->coefficient_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPConstraintProto)
  return target;
}

size_t MPConstraintProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPConstraintProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 var_index = 6 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->var_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _var_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double coefficient = 7 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->coefficient_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficient_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 4 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool is_lazy = 5 [default = false];
    if (has_is_lazy()) {
      total_size += 1 + 1;
    }

    // optional double lower_bound = 2 [default = -inf];
    if (has_lower_bound()) {
      total_size += 1 + 8;
    }

    // optional double upper_bound = 3 [default = inf];
    if (has_upper_bound()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPConstraintProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPConstraintProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MPConstraintProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPConstraintProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPConstraintProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPConstraintProto)
    MergeFrom(*source);
  }
}

void MPConstraintProto::MergeFrom(const MPConstraintProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPConstraintProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  var_index_.MergeFrom(from.var_index_);
  coefficient_.MergeFrom(from.coefficient_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_lazy_ = from.is_lazy_;
    }
    if (cached_has_bits & 0x00000004u) {
      lower_bound_ = from.lower_bound_;
    }
    if (cached_has_bits & 0x00000008u) {
      upper_bound_ = from.upper_bound_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPConstraintProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPConstraintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPConstraintProto::CopyFrom(const MPConstraintProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPConstraintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPConstraintProto::IsInitialized() const {
  return true;
}

void MPConstraintProto::Swap(MPConstraintProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPConstraintProto::InternalSwap(MPConstraintProto* other) {
  using std::swap;
  var_index_.InternalSwap(&other->var_index_);
  coefficient_.InternalSwap(&other->coefficient_);
  name_.Swap(&other->name_);
  swap(is_lazy_, other->is_lazy_);
  swap(lower_bound_, other->lower_bound_);
  swap(upper_bound_, other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPConstraintProto::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PartialVariableAssignment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartialVariableAssignment::kVarIndexFieldNumber;
const int PartialVariableAssignment::kVarValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartialVariableAssignment::PartialVariableAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsPartialVariableAssignment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.PartialVariableAssignment)
}
PartialVariableAssignment::PartialVariableAssignment(const PartialVariableAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      var_index_(from.var_index_),
      var_value_(from.var_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.PartialVariableAssignment)
}

void PartialVariableAssignment::SharedCtor() {
  _cached_size_ = 0;
}

PartialVariableAssignment::~PartialVariableAssignment() {
  // @@protoc_insertion_point(destructor:operations_research.PartialVariableAssignment)
  SharedDtor();
}

void PartialVariableAssignment::SharedDtor() {
}

void PartialVariableAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartialVariableAssignment::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartialVariableAssignment& PartialVariableAssignment::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsPartialVariableAssignment();
  return *internal_default_instance();
}

PartialVariableAssignment* PartialVariableAssignment::New(::google::protobuf::Arena* arena) const {
  PartialVariableAssignment* n = new PartialVariableAssignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartialVariableAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.PartialVariableAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_index_.Clear();
  var_value_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PartialVariableAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.PartialVariableAssignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 var_index = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_var_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_var_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double var_value = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_var_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_var_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.PartialVariableAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.PartialVariableAssignment)
  return false;
#undef DO_
}

void PartialVariableAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.PartialVariableAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 var_index = 1 [packed = true];
  if (this->var_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _var_index_cached_byte_size_));
  }
  for (int i = 0, n = this->var_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->var_index(i), output);
  }

  // repeated double var_value = 2 [packed = true];
  if (this->var_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _var_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->var_value().data(), this->var_value_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.PartialVariableAssignment)
}

::google::protobuf::uint8* PartialVariableAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.PartialVariableAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 var_index = 1 [packed = true];
  if (this->var_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _var_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->var_index_, target);
  }

  // repeated double var_value = 2 [packed = true];
  if (this->var_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _var_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->var_value_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.PartialVariableAssignment)
  return target;
}

size_t PartialVariableAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.PartialVariableAssignment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 var_index = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->var_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _var_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double var_value = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->var_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _var_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartialVariableAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.PartialVariableAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const PartialVariableAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartialVariableAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.PartialVariableAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.PartialVariableAssignment)
    MergeFrom(*source);
  }
}

void PartialVariableAssignment::MergeFrom(const PartialVariableAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.PartialVariableAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  var_index_.MergeFrom(from.var_index_);
  var_value_.MergeFrom(from.var_value_);
}

void PartialVariableAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.PartialVariableAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartialVariableAssignment::CopyFrom(const PartialVariableAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.PartialVariableAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartialVariableAssignment::IsInitialized() const {
  return true;
}

void PartialVariableAssignment::Swap(PartialVariableAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartialVariableAssignment::InternalSwap(PartialVariableAssignment* other) {
  using std::swap;
  var_index_.InternalSwap(&other->var_index_);
  var_value_.InternalSwap(&other->var_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartialVariableAssignment::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MPModelProto::InitAsDefaultInstance() {
  ::operations_research::_MPModelProto_default_instance_._instance.get_mutable()->solution_hint_ = const_cast< ::operations_research::PartialVariableAssignment*>(
      ::operations_research::PartialVariableAssignment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPModelProto::kMaximizeFieldNumber;
const int MPModelProto::kObjectiveOffsetFieldNumber;
const int MPModelProto::kVariableFieldNumber;
const int MPModelProto::kConstraintFieldNumber;
const int MPModelProto::kNameFieldNumber;
const int MPModelProto::kSolutionHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPModelProto::MPModelProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPModelProto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPModelProto)
}
MPModelProto::MPModelProto(const MPModelProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      variable_(from.variable_),
      constraint_(from.constraint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_solution_hint()) {
    solution_hint_ = new ::operations_research::PartialVariableAssignment(*from.solution_hint_);
  } else {
    solution_hint_ = NULL;
  }
  ::memcpy(&objective_offset_, &from.objective_offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximize_) -
    reinterpret_cast<char*>(&objective_offset_)) + sizeof(maximize_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPModelProto)
}

void MPModelProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&solution_hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximize_) -
      reinterpret_cast<char*>(&solution_hint_)) + sizeof(maximize_));
}

MPModelProto::~MPModelProto() {
  // @@protoc_insertion_point(destructor:operations_research.MPModelProto)
  SharedDtor();
}

void MPModelProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete solution_hint_;
}

void MPModelProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPModelProto::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPModelProto& MPModelProto::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPModelProto();
  return *internal_default_instance();
}

MPModelProto* MPModelProto::New(::google::protobuf::Arena* arena) const {
  MPModelProto* n = new MPModelProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variable_.Clear();
  constraint_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(solution_hint_ != NULL);
      solution_hint_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&objective_offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maximize_) -
        reinterpret_cast<char*>(&objective_offset_)) + sizeof(maximize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPModelProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool maximize = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_maximize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maximize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objective_offset = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_objective_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objective_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .operations_research.MPVariableProto variable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .operations_research.MPConstraintProto constraint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operations_research.MPModelProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.PartialVariableAssignment solution_hint = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_solution_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPModelProto)
  return false;
#undef DO_
}

void MPModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool maximize = 1 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->maximize(), output);
  }

  // optional double objective_offset = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->objective_offset(), output);
  }

  // repeated .operations_research.MPVariableProto variable = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->variable(static_cast<int>(i)), output);
  }

  // repeated .operations_research.MPConstraintProto constraint = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constraint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->constraint(static_cast<int>(i)), output);
  }

  // optional string name = 5 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPModelProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional .operations_research.PartialVariableAssignment solution_hint = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->solution_hint_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPModelProto)
}

::google::protobuf::uint8* MPModelProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool maximize = 1 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->maximize(), target);
  }

  // optional double objective_offset = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->objective_offset(), target);
  }

  // repeated .operations_research.MPVariableProto variable = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->variable(static_cast<int>(i)), deterministic, target);
  }

  // repeated .operations_research.MPConstraintProto constraint = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constraint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->constraint(static_cast<int>(i)), deterministic, target);
  }

  // optional string name = 5 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPModelProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional .operations_research.PartialVariableAssignment solution_hint = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->solution_hint_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPModelProto)
  return target;
}

size_t MPModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPModelProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .operations_research.MPVariableProto variable = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->variable_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->variable(static_cast<int>(i)));
    }
  }

  // repeated .operations_research.MPConstraintProto constraint = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->constraint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->constraint(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 5 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .operations_research.PartialVariableAssignment solution_hint = 6;
    if (has_solution_hint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->solution_hint_);
    }

    // optional double objective_offset = 2 [default = 0];
    if (has_objective_offset()) {
      total_size += 1 + 8;
    }

    // optional bool maximize = 1 [default = false];
    if (has_maximize()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPModelProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MPModelProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPModelProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPModelProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPModelProto)
    MergeFrom(*source);
  }
}

void MPModelProto::MergeFrom(const MPModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variable_.MergeFrom(from.variable_);
  constraint_.MergeFrom(from.constraint_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_solution_hint()->::operations_research::PartialVariableAssignment::MergeFrom(from.solution_hint());
    }
    if (cached_has_bits & 0x00000004u) {
      objective_offset_ = from.objective_offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      maximize_ = from.maximize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPModelProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPModelProto::CopyFrom(const MPModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPModelProto::IsInitialized() const {
  return true;
}

void MPModelProto::Swap(MPModelProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPModelProto::InternalSwap(MPModelProto* other) {
  using std::swap;
  variable_.InternalSwap(&other->variable_);
  constraint_.InternalSwap(&other->constraint_);
  name_.Swap(&other->name_);
  swap(solution_hint_, other->solution_hint_);
  swap(objective_offset_, other->objective_offset_);
  swap(maximize_, other->maximize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPModelProto::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionalDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionalDouble::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionalDouble::OptionalDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsOptionalDouble();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.OptionalDouble)
}
OptionalDouble::OptionalDouble(const OptionalDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:operations_research.OptionalDouble)
}

void OptionalDouble::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
}

OptionalDouble::~OptionalDouble() {
  // @@protoc_insertion_point(destructor:operations_research.OptionalDouble)
  SharedDtor();
}

void OptionalDouble::SharedDtor() {
}

void OptionalDouble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionalDouble::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionalDouble& OptionalDouble::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsOptionalDouble();
  return *internal_default_instance();
}

OptionalDouble* OptionalDouble::New(::google::protobuf::Arena* arena) const {
  OptionalDouble* n = new OptionalDouble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionalDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.OptionalDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptionalDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.OptionalDouble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.OptionalDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.OptionalDouble)
  return false;
#undef DO_
}

void OptionalDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.OptionalDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.OptionalDouble)
}

::google::protobuf::uint8* OptionalDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.OptionalDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.OptionalDouble)
  return target;
}

size_t OptionalDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.OptionalDouble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional double value = 1;
  if (has_value()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionalDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.OptionalDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionalDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionalDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.OptionalDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.OptionalDouble)
    MergeFrom(*source);
  }
}

void OptionalDouble::MergeFrom(const OptionalDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.OptionalDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void OptionalDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.OptionalDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionalDouble::CopyFrom(const OptionalDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.OptionalDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionalDouble::IsInitialized() const {
  return true;
}

void OptionalDouble::Swap(OptionalDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionalDouble::InternalSwap(OptionalDouble* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionalDouble::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MPSolverCommonParameters::InitAsDefaultInstance() {
  ::operations_research::_MPSolverCommonParameters_default_instance_._instance.get_mutable()->relative_mip_gap_ = const_cast< ::operations_research::OptionalDouble*>(
      ::operations_research::OptionalDouble::internal_default_instance());
  ::operations_research::_MPSolverCommonParameters_default_instance_._instance.get_mutable()->primal_tolerance_ = const_cast< ::operations_research::OptionalDouble*>(
      ::operations_research::OptionalDouble::internal_default_instance());
  ::operations_research::_MPSolverCommonParameters_default_instance_._instance.get_mutable()->dual_tolerance_ = const_cast< ::operations_research::OptionalDouble*>(
      ::operations_research::OptionalDouble::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPSolverCommonParameters::kRelativeMipGapFieldNumber;
const int MPSolverCommonParameters::kPrimalToleranceFieldNumber;
const int MPSolverCommonParameters::kDualToleranceFieldNumber;
const int MPSolverCommonParameters::kLpAlgorithmFieldNumber;
const int MPSolverCommonParameters::kPresolveFieldNumber;
const int MPSolverCommonParameters::kScalingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPSolverCommonParameters::MPSolverCommonParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPSolverCommonParameters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPSolverCommonParameters)
}
MPSolverCommonParameters::MPSolverCommonParameters(const MPSolverCommonParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_relative_mip_gap()) {
    relative_mip_gap_ = new ::operations_research::OptionalDouble(*from.relative_mip_gap_);
  } else {
    relative_mip_gap_ = NULL;
  }
  if (from.has_primal_tolerance()) {
    primal_tolerance_ = new ::operations_research::OptionalDouble(*from.primal_tolerance_);
  } else {
    primal_tolerance_ = NULL;
  }
  if (from.has_dual_tolerance()) {
    dual_tolerance_ = new ::operations_research::OptionalDouble(*from.dual_tolerance_);
  } else {
    dual_tolerance_ = NULL;
  }
  ::memcpy(&lp_algorithm_, &from.lp_algorithm_,
    static_cast<size_t>(reinterpret_cast<char*>(&scaling_) -
    reinterpret_cast<char*>(&lp_algorithm_)) + sizeof(scaling_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPSolverCommonParameters)
}

void MPSolverCommonParameters::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&relative_mip_gap_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scaling_) -
      reinterpret_cast<char*>(&relative_mip_gap_)) + sizeof(scaling_));
}

MPSolverCommonParameters::~MPSolverCommonParameters() {
  // @@protoc_insertion_point(destructor:operations_research.MPSolverCommonParameters)
  SharedDtor();
}

void MPSolverCommonParameters::SharedDtor() {
  if (this != internal_default_instance()) delete relative_mip_gap_;
  if (this != internal_default_instance()) delete primal_tolerance_;
  if (this != internal_default_instance()) delete dual_tolerance_;
}

void MPSolverCommonParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPSolverCommonParameters::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPSolverCommonParameters& MPSolverCommonParameters::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPSolverCommonParameters();
  return *internal_default_instance();
}

MPSolverCommonParameters* MPSolverCommonParameters::New(::google::protobuf::Arena* arena) const {
  MPSolverCommonParameters* n = new MPSolverCommonParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPSolverCommonParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPSolverCommonParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(relative_mip_gap_ != NULL);
      relative_mip_gap_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(primal_tolerance_ != NULL);
      primal_tolerance_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(dual_tolerance_ != NULL);
      dual_tolerance_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&lp_algorithm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scaling_) -
        reinterpret_cast<char*>(&lp_algorithm_)) + sizeof(scaling_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPSolverCommonParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPSolverCommonParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .operations_research.OptionalDouble relative_mip_gap = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_mip_gap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.OptionalDouble primal_tolerance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primal_tolerance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.OptionalDouble dual_tolerance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dual_tolerance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.MPSolverCommonParameters.LPAlgorithmValues lp_algorithm = 4 [default = LP_ALGO_UNSPECIFIED];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operations_research::MPSolverCommonParameters_LPAlgorithmValues_IsValid(value)) {
            set_lp_algorithm(static_cast< ::operations_research::MPSolverCommonParameters_LPAlgorithmValues >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.OptionalBoolean presolve = 5 [default = BOOL_UNSPECIFIED];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operations_research::OptionalBoolean_IsValid(value)) {
            set_presolve(static_cast< ::operations_research::OptionalBoolean >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.OptionalBoolean scaling = 7 [default = BOOL_UNSPECIFIED];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operations_research::OptionalBoolean_IsValid(value)) {
            set_scaling(static_cast< ::operations_research::OptionalBoolean >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPSolverCommonParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPSolverCommonParameters)
  return false;
#undef DO_
}

void MPSolverCommonParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPSolverCommonParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.OptionalDouble relative_mip_gap = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->relative_mip_gap_, output);
  }

  // optional .operations_research.OptionalDouble primal_tolerance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->primal_tolerance_, output);
  }

  // optional .operations_research.OptionalDouble dual_tolerance = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dual_tolerance_, output);
  }

  // optional .operations_research.MPSolverCommonParameters.LPAlgorithmValues lp_algorithm = 4 [default = LP_ALGO_UNSPECIFIED];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->lp_algorithm(), output);
  }

  // optional .operations_research.OptionalBoolean presolve = 5 [default = BOOL_UNSPECIFIED];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->presolve(), output);
  }

  // optional .operations_research.OptionalBoolean scaling = 7 [default = BOOL_UNSPECIFIED];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->scaling(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPSolverCommonParameters)
}

::google::protobuf::uint8* MPSolverCommonParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPSolverCommonParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.OptionalDouble relative_mip_gap = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->relative_mip_gap_, deterministic, target);
  }

  // optional .operations_research.OptionalDouble primal_tolerance = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->primal_tolerance_, deterministic, target);
  }

  // optional .operations_research.OptionalDouble dual_tolerance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->dual_tolerance_, deterministic, target);
  }

  // optional .operations_research.MPSolverCommonParameters.LPAlgorithmValues lp_algorithm = 4 [default = LP_ALGO_UNSPECIFIED];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->lp_algorithm(), target);
  }

  // optional .operations_research.OptionalBoolean presolve = 5 [default = BOOL_UNSPECIFIED];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->presolve(), target);
  }

  // optional .operations_research.OptionalBoolean scaling = 7 [default = BOOL_UNSPECIFIED];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->scaling(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPSolverCommonParameters)
  return target;
}

size_t MPSolverCommonParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPSolverCommonParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .operations_research.OptionalDouble relative_mip_gap = 1;
    if (has_relative_mip_gap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->relative_mip_gap_);
    }

    // optional .operations_research.OptionalDouble primal_tolerance = 2;
    if (has_primal_tolerance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->primal_tolerance_);
    }

    // optional .operations_research.OptionalDouble dual_tolerance = 3;
    if (has_dual_tolerance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->dual_tolerance_);
    }

    // optional .operations_research.MPSolverCommonParameters.LPAlgorithmValues lp_algorithm = 4 [default = LP_ALGO_UNSPECIFIED];
    if (has_lp_algorithm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lp_algorithm());
    }

    // optional .operations_research.OptionalBoolean presolve = 5 [default = BOOL_UNSPECIFIED];
    if (has_presolve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->presolve());
    }

    // optional .operations_research.OptionalBoolean scaling = 7 [default = BOOL_UNSPECIFIED];
    if (has_scaling()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scaling());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPSolverCommonParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPSolverCommonParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MPSolverCommonParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPSolverCommonParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPSolverCommonParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPSolverCommonParameters)
    MergeFrom(*source);
  }
}

void MPSolverCommonParameters::MergeFrom(const MPSolverCommonParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPSolverCommonParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_relative_mip_gap()->::operations_research::OptionalDouble::MergeFrom(from.relative_mip_gap());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_primal_tolerance()->::operations_research::OptionalDouble::MergeFrom(from.primal_tolerance());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_dual_tolerance()->::operations_research::OptionalDouble::MergeFrom(from.dual_tolerance());
    }
    if (cached_has_bits & 0x00000008u) {
      lp_algorithm_ = from.lp_algorithm_;
    }
    if (cached_has_bits & 0x00000010u) {
      presolve_ = from.presolve_;
    }
    if (cached_has_bits & 0x00000020u) {
      scaling_ = from.scaling_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPSolverCommonParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPSolverCommonParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPSolverCommonParameters::CopyFrom(const MPSolverCommonParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPSolverCommonParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPSolverCommonParameters::IsInitialized() const {
  return true;
}

void MPSolverCommonParameters::Swap(MPSolverCommonParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPSolverCommonParameters::InternalSwap(MPSolverCommonParameters* other) {
  using std::swap;
  swap(relative_mip_gap_, other->relative_mip_gap_);
  swap(primal_tolerance_, other->primal_tolerance_);
  swap(dual_tolerance_, other->dual_tolerance_);
  swap(lp_algorithm_, other->lp_algorithm_);
  swap(presolve_, other->presolve_);
  swap(scaling_, other->scaling_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPSolverCommonParameters::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MPModelRequest::InitAsDefaultInstance() {
  ::operations_research::_MPModelRequest_default_instance_._instance.get_mutable()->model_ = const_cast< ::operations_research::MPModelProto*>(
      ::operations_research::MPModelProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPModelRequest::kModelFieldNumber;
const int MPModelRequest::kSolverTypeFieldNumber;
const int MPModelRequest::kSolverTimeLimitSecondsFieldNumber;
const int MPModelRequest::kEnableInternalSolverOutputFieldNumber;
const int MPModelRequest::kSolverSpecificParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPModelRequest::MPModelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPModelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPModelRequest)
}
MPModelRequest::MPModelRequest(const MPModelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  solver_specific_parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_solver_specific_parameters()) {
    solver_specific_parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solver_specific_parameters_);
  }
  if (from.has_model()) {
    model_ = new ::operations_research::MPModelProto(*from.model_);
  } else {
    model_ = NULL;
  }
  ::memcpy(&solver_time_limit_seconds_, &from.solver_time_limit_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&solver_type_) -
    reinterpret_cast<char*>(&solver_time_limit_seconds_)) + sizeof(solver_type_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPModelRequest)
}

void MPModelRequest::SharedCtor() {
  _cached_size_ = 0;
  solver_specific_parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_internal_solver_output_) -
      reinterpret_cast<char*>(&model_)) + sizeof(enable_internal_solver_output_));
  solver_type_ = 2;
}

MPModelRequest::~MPModelRequest() {
  // @@protoc_insertion_point(destructor:operations_research.MPModelRequest)
  SharedDtor();
}

void MPModelRequest::SharedDtor() {
  solver_specific_parameters_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete model_;
}

void MPModelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPModelRequest::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPModelRequest& MPModelRequest::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPModelRequest();
  return *internal_default_instance();
}

MPModelRequest* MPModelRequest::New(::google::protobuf::Arena* arena) const {
  MPModelRequest* n = new MPModelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!solver_specific_parameters_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*solver_specific_parameters_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(model_ != NULL);
      model_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&solver_time_limit_seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_internal_solver_output_) -
        reinterpret_cast<char*>(&solver_time_limit_seconds_)) + sizeof(enable_internal_solver_output_));
    solver_type_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPModelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .operations_research.MPModelProto model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .operations_research.MPModelRequest.SolverType solver_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operations_research::MPModelRequest_SolverType_IsValid(value)) {
            set_solver_type(static_cast< ::operations_research::MPModelRequest_SolverType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double solver_time_limit_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_solver_time_limit_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &solver_time_limit_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_internal_solver_output = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_enable_internal_solver_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_internal_solver_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string solver_specific_parameters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solver_specific_parameters()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->solver_specific_parameters().data(), static_cast<int>(this->solver_specific_parameters().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operations_research.MPModelRequest.solver_specific_parameters");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPModelRequest)
  return false;
#undef DO_
}

void MPModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.MPModelProto model = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->model_, output);
  }

  // optional .operations_research.MPModelRequest.SolverType solver_type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->solver_type(), output);
  }

  // optional double solver_time_limit_seconds = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->solver_time_limit_seconds(), output);
  }

  // optional bool enable_internal_solver_output = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable_internal_solver_output(), output);
  }

  // optional string solver_specific_parameters = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solver_specific_parameters().data(), static_cast<int>(this->solver_specific_parameters().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPModelRequest.solver_specific_parameters");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->solver_specific_parameters(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPModelRequest)
}

::google::protobuf::uint8* MPModelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.MPModelProto model = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->model_, deterministic, target);
  }

  // optional .operations_research.MPModelRequest.SolverType solver_type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->solver_type(), target);
  }

  // optional double solver_time_limit_seconds = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->solver_time_limit_seconds(), target);
  }

  // optional bool enable_internal_solver_output = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enable_internal_solver_output(), target);
  }

  // optional string solver_specific_parameters = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->solver_specific_parameters().data(), static_cast<int>(this->solver_specific_parameters().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operations_research.MPModelRequest.solver_specific_parameters");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->solver_specific_parameters(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPModelRequest)
  return target;
}

size_t MPModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPModelRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string solver_specific_parameters = 5;
    if (has_solver_specific_parameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->solver_specific_parameters());
    }

    // optional .operations_research.MPModelProto model = 1;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->model_);
    }

    // optional double solver_time_limit_seconds = 3;
    if (has_solver_time_limit_seconds()) {
      total_size += 1 + 8;
    }

    // optional bool enable_internal_solver_output = 4 [default = false];
    if (has_enable_internal_solver_output()) {
      total_size += 1 + 1;
    }

    // optional .operations_research.MPModelRequest.SolverType solver_type = 2;
    if (has_solver_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->solver_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MPModelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPModelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPModelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPModelRequest)
    MergeFrom(*source);
  }
}

void MPModelRequest::MergeFrom(const MPModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_solver_specific_parameters();
      solver_specific_parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solver_specific_parameters_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_model()->::operations_research::MPModelProto::MergeFrom(from.model());
    }
    if (cached_has_bits & 0x00000004u) {
      solver_time_limit_seconds_ = from.solver_time_limit_seconds_;
    }
    if (cached_has_bits & 0x00000008u) {
      enable_internal_solver_output_ = from.enable_internal_solver_output_;
    }
    if (cached_has_bits & 0x00000010u) {
      solver_type_ = from.solver_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPModelRequest::CopyFrom(const MPModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPModelRequest::IsInitialized() const {
  return true;
}

void MPModelRequest::Swap(MPModelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPModelRequest::InternalSwap(MPModelRequest* other) {
  using std::swap;
  solver_specific_parameters_.Swap(&other->solver_specific_parameters_);
  swap(model_, other->model_);
  swap(solver_time_limit_seconds_, other->solver_time_limit_seconds_);
  swap(enable_internal_solver_output_, other->enable_internal_solver_output_);
  swap(solver_type_, other->solver_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPModelRequest::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MPSolutionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPSolutionResponse::kStatusFieldNumber;
const int MPSolutionResponse::kObjectiveValueFieldNumber;
const int MPSolutionResponse::kBestObjectiveBoundFieldNumber;
const int MPSolutionResponse::kVariableValueFieldNumber;
const int MPSolutionResponse::kDualValueFieldNumber;
const int MPSolutionResponse::kReducedCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPSolutionResponse::MPSolutionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPSolutionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:operations_research.MPSolutionResponse)
}
MPSolutionResponse::MPSolutionResponse(const MPSolutionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      variable_value_(from.variable_value_),
      dual_value_(from.dual_value_),
      reduced_cost_(from.reduced_cost_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objective_value_, &from.objective_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&objective_value_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:operations_research.MPSolutionResponse)
}

void MPSolutionResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&objective_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_objective_bound_) -
      reinterpret_cast<char*>(&objective_value_)) + sizeof(best_objective_bound_));
  status_ = 99;
}

MPSolutionResponse::~MPSolutionResponse() {
  // @@protoc_insertion_point(destructor:operations_research.MPSolutionResponse)
  SharedDtor();
}

void MPSolutionResponse::SharedDtor() {
}

void MPSolutionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPSolutionResponse::descriptor() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPSolutionResponse& MPSolutionResponse::default_instance() {
  ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::InitDefaultsMPSolutionResponse();
  return *internal_default_instance();
}

MPSolutionResponse* MPSolutionResponse::New(::google::protobuf::Arena* arena) const {
  MPSolutionResponse* n = new MPSolutionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPSolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.MPSolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variable_value_.Clear();
  dual_value_.Clear();
  reduced_cost_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&objective_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&best_objective_bound_) -
        reinterpret_cast<char*>(&objective_value_)) + sizeof(best_objective_bound_));
    status_ = 99;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MPSolutionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operations_research.MPSolutionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .operations_research.MPSolverResponseStatus status = 1 [default = MPSOLVER_UNKNOWN_STATUS];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operations_research::MPSolverResponseStatus_IsValid(value)) {
            set_status(static_cast< ::operations_research::MPSolverResponseStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objective_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_objective_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objective_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double variable_value = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_variable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26u, input, this->mutable_variable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double dual_value = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dual_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34u, input, this->mutable_dual_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double best_objective_bound = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_best_objective_bound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &best_objective_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double reduced_cost = 6 [packed = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_reduced_cost())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50u, input, this->mutable_reduced_cost())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operations_research.MPSolutionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operations_research.MPSolutionResponse)
  return false;
#undef DO_
}

void MPSolutionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operations_research.MPSolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.MPSolverResponseStatus status = 1 [default = MPSOLVER_UNKNOWN_STATUS];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional double objective_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->objective_value(), output);
  }

  // repeated double variable_value = 3 [packed = true];
  if (this->variable_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _variable_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->variable_value().data(), this->variable_value_size(), output);
  }

  // repeated double dual_value = 4 [packed = true];
  if (this->dual_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dual_value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->dual_value().data(), this->dual_value_size(), output);
  }

  // optional double best_objective_bound = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->best_objective_bound(), output);
  }

  // repeated double reduced_cost = 6 [packed = true];
  if (this->reduced_cost_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reduced_cost_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->reduced_cost().data(), this->reduced_cost_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operations_research.MPSolutionResponse)
}

::google::protobuf::uint8* MPSolutionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.MPSolutionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .operations_research.MPSolverResponseStatus status = 1 [default = MPSOLVER_UNKNOWN_STATUS];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional double objective_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->objective_value(), target);
  }

  // repeated double variable_value = 3 [packed = true];
  if (this->variable_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _variable_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->variable_value_, target);
  }

  // repeated double dual_value = 4 [packed = true];
  if (this->dual_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dual_value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->dual_value_, target);
  }

  // optional double best_objective_bound = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->best_objective_bound(), target);
  }

  // repeated double reduced_cost = 6 [packed = true];
  if (this->reduced_cost_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _reduced_cost_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->reduced_cost_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.MPSolutionResponse)
  return target;
}

size_t MPSolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.MPSolutionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double variable_value = 3 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->variable_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _variable_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double dual_value = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->dual_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dual_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double reduced_cost = 6 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->reduced_cost_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reduced_cost_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional double objective_value = 2;
    if (has_objective_value()) {
      total_size += 1 + 8;
    }

    // optional double best_objective_bound = 5;
    if (has_best_objective_bound()) {
      total_size += 1 + 8;
    }

    // optional .operations_research.MPSolverResponseStatus status = 1 [default = MPSOLVER_UNKNOWN_STATUS];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPSolutionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.MPSolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MPSolutionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPSolutionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.MPSolutionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.MPSolutionResponse)
    MergeFrom(*source);
  }
}

void MPSolutionResponse::MergeFrom(const MPSolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.MPSolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variable_value_.MergeFrom(from.variable_value_);
  dual_value_.MergeFrom(from.dual_value_);
  reduced_cost_.MergeFrom(from.reduced_cost_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      objective_value_ = from.objective_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      best_objective_bound_ = from.best_objective_bound_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MPSolutionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.MPSolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPSolutionResponse::CopyFrom(const MPSolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.MPSolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPSolutionResponse::IsInitialized() const {
  return true;
}

void MPSolutionResponse::Swap(MPSolutionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPSolutionResponse::InternalSwap(MPSolutionResponse* other) {
  using std::swap;
  variable_value_.InternalSwap(&other->variable_value_);
  dual_value_.InternalSwap(&other->dual_value_);
  reduced_cost_.InternalSwap(&other->reduced_cost_);
  swap(objective_value_, other->objective_value_);
  swap(best_objective_bound_, other->best_objective_bound_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPSolutionResponse::GetMetadata() const {
  protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ortools_2flinear_5fsolver_2flinear_5fsolver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace operations_research

// @@protoc_insertion_point(global_scope)
